# utf-8
# cof86.schema.yaml
# Recommended font family: Serif_Cof
# 2022-05-22

schema:
  author:
    - "发明人 王永民先生"
  description: |
    五笔86  cof扩展版
    码表源自 ibus-table
    扩充了大写字母繁体部件字根
    开头大写字母进入日文假名输入模式
    按下小写 z 键进入cof符号输入法
    按下z键时，会提示上次输入的字/词
    按下Tab键可取消当前输入
    扩展人：Cof-Lee 2022-05-22
  name: "cof86五笔"
  schema_id: cof86
  version: 1.4

speller:
  delimiter: "/"
  alphabet: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
  #max_code_length: 4
  #auto_select: true
  #auto_select_unique_candidate: true
  #auto_clear: max_length

#chord_composer:
  # 字母表，包含用於並擊的按鍵（用作并击的键就不推荐做单打的键）
  # 擊鍵雖有先後，形成並擊時，一律以字母表順序排列
  #alphabet: "wsxedcrfvujmikol "
  # 拼寫運算規則，將一組並擊編碼轉換爲拼音音節
  #algebra:
    # 先將物理按鍵字符對應到宮保拼音鍵位中的拼音字母
    #- 'xlit|swxdecfrvgtbnjum ki,lo.|sczhlfgdbktpRiuVaNIUeoE|'
    # 以下根據宮保拼音的鍵位分別變換聲母、韻母部分
    # 組合聲母
    #- xform/^df/vbrq/
    #- xform/^fj/gitf/
    #- xform/^DF/gitf/
    #- xform/^EF/gitf/
    #- xform/^SDF/gitf/
    #- xform/^v /gitf/
  # 並擊過程中套用的式樣
  #prompt_format:
    # 加方括弧
    #- "xform/^(.*)$/<$1>/"

switches:
  - name: ascii_mode
    reset: 1
    states: ["中", "英"]
  #- name: full_shape
    #reset: 0
    #states: ["半", "全"]
  - name: extended_charset
    reset: 1
    #states: ["常utf", "扩utf"]
  - options: ["gbk", "utf8"]
    reset: 1
    states: ["Gbk", "Utf8"]
  - name: ascii_punct
    reset: 0
    #states: ["。，", "．，"]
  - name: zh_trad
    reset: 0
    states: ["关", "繁s2t"]


translator:
  comment_format:
   # - "xlit|abcdefghijklmnopqrstuvwxyz|工了以在有地一上不是中国同民为这我的要和产发人经主z|"
   - "xform/~/ -/"
  preedit_format:
    #- "xform/^([a-z]*)$/$1\\t[\\U$1\\E]/" 🀙
    #- "xlit|abcdefghijklmnopqrstuvwxyz|♠♥♣♦♤♡♧♢☻🀠🀄🀚🀛🀜🀟⌚☂⛅🀩🀅♔♘⛄♙❆⚢|"
    #- "xlit|abcdefghijklmnopqrstuvwxyz|🐭🐮🐅🐰🐉🐘🐎🐏🐒🐓🐕🐷🐫🦌🐂👻👽💩❤💔🐥🐸🦖🦋🐝z|"
    #- "xlit|ABCDEFGHIJKLMNOPQRSTUVWXYZ|爿馬臣鹵𠀐車貝韋龍釒鳥門⺻飠糹訁☠|"
  dictionary: cof86_base
  prism: cof86_base
  disable_user_dict_for_patterns:
    - "^z.*$"
  enable_charset_filter: true
  enable_completion: true
  enable_encoder: false
  enable_sentence: true
  enable_user_dict: false
  encode_commit_history: false
  max_phrase_length: 12
  
  
engine:
  processors:
    - ascii_composer
    - recognizer
    - chord_composer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - table_translator
    - history_translator


  filters:
    - simplifier
    - uniquifier

ascii_composer:
  good_old_caps_lock: true
  switch_key:
    Caps_Lock: clear
    Control_L: noop
    Control_R: noop
    Eisu_toggle: clear
    Shift_L: commit_code
    Shift_R: commit_code

key_binder:
  bindings:
    - {accept: semicolon, send: 2, when: has_menu}
    - {accept: apostrophe, send: 3, when: has_menu}
    - {accept: space, send: space, when: has_menu}
    - {accept: space, send: Escape, when: composing}
    - {accept: Tab, send: Escape, when: has_menu}
    - {accept: Tab, send: Escape, when: composing}
    - {accept: "Shift+space", send: Down, when: has_menu}
    - {accept: "Control+e", toggle: cof_trans, when: has_menu}
    - {accept: "Control+f", toggle: zh_trad, when: has_menu}
    - {accept: "Control+g", toggle: gbk_code, when: has_menu}
    - {accept: "Control+u", toggle: Utf16_code, when: has_menu}
    - {accept: "Control+p", toggle: pinyin, when: has_menu}
    - {accept: "Control+t", toggle: tongyong, when: has_menu}
    - {accept: "Control+w", toggle: dic_4w_en, when: has_menu}
    - {accept: "Control+q", toggle: punct, when: has_menu}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: Return, send: "Control+Shift+Return", when: has_menu}


menu:
  page_size: 5
  #alternative_select_labels: [ , , , , , , , , ⑥, ⑦]
  alternative_select_labels: [ 🐷, 🐭, 🐰, 👽, 🐸, 🐷, 🐭, 🐰, 👽, 🐸]
  #alternative_select_keys: "ABCDE"

history:
  input: 'z' 
  size: 1
  #initial_quality: 1000


simplifier:
  opencc_config: s2t.json
  option_name: zh_trad
  show_in_comment: true
  tips: all



punctuator:
  full_shape: &punct
    #" ": [" ", "　"]
    " ": {commit: " "}
    #"!": ["!", "！"]
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    #"#": ["#", "＃", "⌘"]
    "#": {commit: "#"}
    "$": ["$", "¥", "€", "£", "￥", "¢", "¤"]
    "%": ["%", "°", "℃", "℉", "％"]
    #"&": ["&", "＆"]
    "&": {commit: "&"}
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": ["*", "＊", "★", "·", "・", "×", "※", "❂"]
    #"+": ["+", "＋"]
    "+": {commit: "+"}
    ",": {commit: "，"}
    #"-": ["-", "－"]
    "-": {commit: "-"}
    .: {commit: "。"}
    #"/": ["/", "／", "、", "÷"]
    "/": ["/"]
    ":": {commit: "："}
    ";": {commit: "；"}
    "<": ["《", "『", "【", "〈", "«", "‹"]
    #"=": ["=", "＝"]
    "=": {commit: "="}
    ">": ["》", "』", "】", "〉", "»", "›"]
    "?": {commit: "？"}
    "@": ["＠", "@", "☯"]
    "[": ["「", "【", "〔", "［"]
    "\\": ["\\", "＼", "、"]
    "]": ["」", "】", "〕", "］"]
    "^": ["^", "……", "…"]
    _: ["_", "——"]
    "`": ["`", "｀"]
    "{": ["『", "〖", "｛"]
    "|": ["·", "｜", "§", "¦"]
    "}": ["』", "〗", "｝"]
    "~": ["~", "～"]
  half_shape: *punct
  symbols: 
    "/1": ["①", "⑴", "㈠"]
    "/2": ["②", "⑵", "㈡"]
    "/3": ["③", "⑶", "㈢"]
    "/4": ["④", "⑷", "㈣"]
    "/5": ["⑤", "⑸", "㈤"]
    "/6": ["⑥", "⑹", "㈥"]
    "/7": ["⑦", "⑺", "㈦"]
    "/8": ["⑧", "⑻", "㈧"]
    "/9": ["⑨", "⑼", "㈨"]
    "/0": ["⑩", "⑽", "㈩"]
    "/of": "℉"
    "/oc": "℃"


recognizer:
  patterns:
    #email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    reverse_lookup: "^z[a-zA-Z0-9\/]*"
    punct: "^/([0-9]0?|[A-Za-z]+)$"
    #uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    #url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"

